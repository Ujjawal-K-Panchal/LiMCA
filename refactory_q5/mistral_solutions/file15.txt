def top_k(lst, k):
    if len(lst) <= k:
        return lst

    pivot = lst[len(lst) // 2]
    lower, middle, higher = [], [], []

    for num in lst:
        if num < pivot:
            lower.append(num)
        elif num == pivot:
            middle.append(num)
        else:
            higher.append(num)

    return middle + top_k(higher, k - len(middle))

def find_top_k(lst, k):
    if len(lst) <= k:
        return lst[::]

    res = top_k(lst, k)
    return res[::-1]